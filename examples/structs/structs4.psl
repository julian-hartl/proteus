import "std/io";
fn main() {

    let test2 = &2;
    let test3 = &mut test2;
    let mut test = 1;
    test = 2;
    let foo = Foo { x: 1, y: 2 };
    println(&foo.x);
    modifyByValue(foo);
    println(&foo.x);
    modifyByReference(&foo);
    println(&foo.x);
    reassignPointer(&foo);
    println(&foo.x);
    reassignPointerReference(&mut foo);
    println(&foo.x);

}

struct Foo {
    mut x: Int;
    y: Int;
}
fn reassignPointer(mut foo: &Foo) {
    foo = &Foo { x: 10, y: 4 };
}
fn reassignPointerReference(foo: &mut Foo) {
    *foo = Foo { x: 10, y: 4 };
}


fn modifyByValue(foo: Foo) {
    foo.x = 3;
}

fn modifyByReference(foo: &Foo) {
    (*foo).x = 3;
}




